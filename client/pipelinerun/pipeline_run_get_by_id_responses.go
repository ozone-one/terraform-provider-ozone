// Code generated by go-swagger; DO NOT EDIT.

package pipelinerun

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ozone-one/terraform-provider-ozone/models"
)

// PipelineRunGetByIDReader is a Reader for the PipelineRunGetByID structure.
type PipelineRunGetByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PipelineRunGetByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPipelineRunGetByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPipelineRunGetByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPipelineRunGetByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPipelineRunGetByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPipelineRunGetByIDOK creates a PipelineRunGetByIDOK with default headers values
func NewPipelineRunGetByIDOK() *PipelineRunGetByIDOK {
	return &PipelineRunGetByIDOK{}
}

/*
PipelineRunGetByIDOK describes a response with status code 200, with default header values.

OK
*/
type PipelineRunGetByIDOK struct {

	/* total matching count
	 */
	XTotalCount int64

	Payload *models.PipelineRun
}

func (o *PipelineRunGetByIDOK) Error() string {
	return fmt.Sprintf("[GET /admin/pipelinerun/{id}][%d] pipelineRunGetByIdOK  %+v", 200, o.Payload)
}
func (o *PipelineRunGetByIDOK) GetPayload() *models.PipelineRun {
	return o.Payload
}

func (o *PipelineRunGetByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Total-Count
	hdrXTotalCount := response.GetHeader("X-Total-Count")

	if hdrXTotalCount != "" {
		valxTotalCount, err := swag.ConvertInt64(hdrXTotalCount)
		if err != nil {
			return errors.InvalidType("X-Total-Count", "header", "int64", hdrXTotalCount)
		}
		o.XTotalCount = valxTotalCount
	}

	o.Payload = new(models.PipelineRun)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineRunGetByIDBadRequest creates a PipelineRunGetByIDBadRequest with default headers values
func NewPipelineRunGetByIDBadRequest() *PipelineRunGetByIDBadRequest {
	return &PipelineRunGetByIDBadRequest{}
}

/*
PipelineRunGetByIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PipelineRunGetByIDBadRequest struct {
	Payload *models.ErrorMessage
}

func (o *PipelineRunGetByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /admin/pipelinerun/{id}][%d] pipelineRunGetByIdBadRequest  %+v", 400, o.Payload)
}
func (o *PipelineRunGetByIDBadRequest) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PipelineRunGetByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineRunGetByIDNotFound creates a PipelineRunGetByIDNotFound with default headers values
func NewPipelineRunGetByIDNotFound() *PipelineRunGetByIDNotFound {
	return &PipelineRunGetByIDNotFound{}
}

/*
PipelineRunGetByIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PipelineRunGetByIDNotFound struct {
	Payload *models.ErrorMessage
}

func (o *PipelineRunGetByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/pipelinerun/{id}][%d] pipelineRunGetByIdNotFound  %+v", 404, o.Payload)
}
func (o *PipelineRunGetByIDNotFound) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PipelineRunGetByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineRunGetByIDInternalServerError creates a PipelineRunGetByIDInternalServerError with default headers values
func NewPipelineRunGetByIDInternalServerError() *PipelineRunGetByIDInternalServerError {
	return &PipelineRunGetByIDInternalServerError{}
}

/*
PipelineRunGetByIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PipelineRunGetByIDInternalServerError struct {
	Payload *models.ErrorMessage
}

func (o *PipelineRunGetByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /admin/pipelinerun/{id}][%d] pipelineRunGetByIdInternalServerError  %+v", 500, o.Payload)
}
func (o *PipelineRunGetByIDInternalServerError) GetPayload() *models.ErrorMessage {
	return o.Payload
}

func (o *PipelineRunGetByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
