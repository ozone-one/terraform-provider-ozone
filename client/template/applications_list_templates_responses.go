// Code generated by go-swagger; DO NOT EDIT.

package template

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ozone-one/terraform-provider-ozone/models"
)

// ApplicationsListTemplatesReader is a Reader for the ApplicationsListTemplates structure.
type ApplicationsListTemplatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ApplicationsListTemplatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewApplicationsListTemplatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewApplicationsListTemplatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewApplicationsListTemplatesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewApplicationsListTemplatesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewApplicationsListTemplatesOK creates a ApplicationsListTemplatesOK with default headers values
func NewApplicationsListTemplatesOK() *ApplicationsListTemplatesOK {
	return &ApplicationsListTemplatesOK{}
}

/*
ApplicationsListTemplatesOK describes a response with status code 200, with default header values.

OK
*/
type ApplicationsListTemplatesOK struct {

	/* total matching count
	 */
	XTotalCount int64

	Payload *models.ApplicationTemplatesListView
}

func (o *ApplicationsListTemplatesOK) Error() string {
	return fmt.Sprintf("[GET /admin/app/template][%d] applicationsListTemplatesOK  %+v", 200, o.Payload)
}
func (o *ApplicationsListTemplatesOK) GetPayload() *models.ApplicationTemplatesListView {
	return o.Payload
}

func (o *ApplicationsListTemplatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header X-Total-Count
	hdrXTotalCount := response.GetHeader("X-Total-Count")

	if hdrXTotalCount != "" {
		valxTotalCount, err := swag.ConvertInt64(hdrXTotalCount)
		if err != nil {
			return errors.InvalidType("X-Total-Count", "header", "int64", hdrXTotalCount)
		}
		o.XTotalCount = valxTotalCount
	}

	o.Payload = new(models.ApplicationTemplatesListView)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationsListTemplatesBadRequest creates a ApplicationsListTemplatesBadRequest with default headers values
func NewApplicationsListTemplatesBadRequest() *ApplicationsListTemplatesBadRequest {
	return &ApplicationsListTemplatesBadRequest{}
}

/*
ApplicationsListTemplatesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ApplicationsListTemplatesBadRequest struct {
	Payload interface{}
}

func (o *ApplicationsListTemplatesBadRequest) Error() string {
	return fmt.Sprintf("[GET /admin/app/template][%d] applicationsListTemplatesBadRequest  %+v", 400, o.Payload)
}
func (o *ApplicationsListTemplatesBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ApplicationsListTemplatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationsListTemplatesNotFound creates a ApplicationsListTemplatesNotFound with default headers values
func NewApplicationsListTemplatesNotFound() *ApplicationsListTemplatesNotFound {
	return &ApplicationsListTemplatesNotFound{}
}

/*
ApplicationsListTemplatesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ApplicationsListTemplatesNotFound struct {
	Payload interface{}
}

func (o *ApplicationsListTemplatesNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/app/template][%d] applicationsListTemplatesNotFound  %+v", 404, o.Payload)
}
func (o *ApplicationsListTemplatesNotFound) GetPayload() interface{} {
	return o.Payload
}

func (o *ApplicationsListTemplatesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewApplicationsListTemplatesInternalServerError creates a ApplicationsListTemplatesInternalServerError with default headers values
func NewApplicationsListTemplatesInternalServerError() *ApplicationsListTemplatesInternalServerError {
	return &ApplicationsListTemplatesInternalServerError{}
}

/*
ApplicationsListTemplatesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ApplicationsListTemplatesInternalServerError struct {
	Payload interface{}
}

func (o *ApplicationsListTemplatesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /admin/app/template][%d] applicationsListTemplatesInternalServerError  %+v", 500, o.Payload)
}
func (o *ApplicationsListTemplatesInternalServerError) GetPayload() interface{} {
	return o.Payload
}

func (o *ApplicationsListTemplatesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
